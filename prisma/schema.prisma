// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEON_DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  name         String?
  email        String        @unique
  password     String?
  accounts     Account[]
  sessions     Session[]
  applications Application[]
}

model Application {
  id                   String    @id @default(cuid())
  User                 User      @relation(fields: [UserId], references: [id])
  UserId               String
  company              String
  position             String
  location             String
  url                  String?
  status               String
  lastStatusChangeDate DateTime? @default(now())
  notes                String?
  resumeUrl            String?
  appliedAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt
  jobSource            String?
  salary               Int?
  interviewDate        DateTime?
  pinned               Boolean   @default(false)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  User User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?
  sessionToken String   @unique
  expires      DateTime
}
